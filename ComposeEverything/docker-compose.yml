services:

  user:
    labels:
        application: user
    build:
      context: ../UserAPI
      dockerfile: Dockerfile
    ports:
      - "9001:8080"
    volumes:
      - ./volumes/user/logs:/app/logs
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://user:8080/actuator/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      - grafana

  prometheus:
    image: prom/prometheus:v2.53.0
    restart: unless-stopped
    volumes:
      - ./volumes/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./volumes/prometheus/targets/otel_targets.yml:/etc/prometheus/targets/otel_targets.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      user:
        condition: service_healthy

  opentelemetry:
    image: otel/opentelemetry-collector-contrib:0.104.0
    user: 0:0
    command:
      - --config=/etc/otel/receivers.yml
      - --config=/etc/otel/processors.yml
      - --config=/etc/otel/exporters.yml
      - --config=/etc/otel/service.yml
    logging:
      driver: local
      options:
        max-size: 10m
    volumes:
      - ./volumes/opentelemetry:/etc/otel:ro
      - ./volumes/user/logs:/logs
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:13133/healthz || exit 1
      interval: 15s
      timeout: 10s
      retries: 5
    ports:
      - "13133:13133" # health check

  loki:
    image: grafana/loki:3.1.0
    restart: unless-stopped
    environment:
      - LOKI_RETENTION_PERIOD=90d
    command:
      - -config.file=/etc/loki/local-config.yaml
      - -config.expand-env=true
    volumes:
      - ./volumes/loki/local-config.yaml:/etc/loki/local-config.yaml
      - loki_data:/loki
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:3100/ready || exit 1
      interval: 15s
      timeout: 10s
      retries: 5
    ports:
      - "3100:3100"

  grafana:
    image: grafana/grafana:10.0.3
    user: '472'
    restart: unless-stopped
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: password
      GF_USERS_ALLOW_SIGN_UP: false
    logging:
      driver: local
      options:
        max-size: 10m
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      loki:
        condition: service_healthy
      opentelemetry:
        condition: service_started

volumes:
  prometheus_data: { }
  loki_data: {}
  grafana_data: {}